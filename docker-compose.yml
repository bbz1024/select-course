version: "3.9"
services:
  redis:
    image: redis:6-alpine
    volumes:
      - ./redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - Course
    env_file:
      - .env
    command: [ "redis-server", "/etc/redis/redis.conf" ]
  mysql:
    image: mysql:8.0-debian
    ports:
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    networks:
      - Course
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - Course
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - Course-Rabbitmq:/var/lib/rabbitmq
  app1:
    image: select-course
    ports:
      - "8888:8888"
    command: [ "./app" ]
    networks:
      - Course
    depends_on:
      - mysql
      - redis
      - rabbitmq
    volumes:
      - .env:/project/.env
    env_file:
      - .env
  app2:
    image: select-course
    ports:
      - "8889:8888"
    command: [ "./app" ]
    networks:
      - Course
    depends_on:
      - mysql
      - redis
      - rabbitmq
    volumes:
      - .env:/project/.env
    env_file:
      - .env
  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.balancer.conf:/etc/nginx/nginx.conf
      #      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      - Course
    depends_on:
      - app1
      - app2
  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
    - "5775:5775/udp"
    - "6831:6831/udp"
    - "6832:6832/udp"
    - "5778:5778"
    - "16686:16686"
    - "14250:14250"
    - "14268:14268"
    - "14269:14269"
    - "9411:9411"
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -q http://localhost:16686/search || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
  consul:
    image: consul
    command: [
      "agent",
      "-dev",
      "-client=0.0.0.0"
    ]
    ports:
      - "8500:8500"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  Course:
    driver: bridge
volumes:
  Course-RDB:
  Course-Mysql:
  Course-Rabbitmq: